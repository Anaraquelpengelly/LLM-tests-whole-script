/* * SPDX-FileCopyrightText: Copyright Â© 2019 WebGoat authors * SPDX-License-Identifier: GPL-2.0-or-later */package org.owasp.webgoat.lessons.deserialization;import java.io.ByteArrayInputStream;import java.io.ByteArrayOutputStream;import java.io.DataOutputStream;import java.io.IOException;import java.io.InvalidClassException;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.io.ObjectStreamClass;import java.io.Serializable;import java.util.Base64;import java.util.Set;import java.util.HashSet;public class SerializationHelper {  private static final char[] hexArray = "0123456789ABCDEF".toCharArray();  private static final Set<String> ALLOWED_CLASSES = new HashSet<>();  static {    ALLOWED_CLASSES.add("java.lang.String");    ALLOWED_CLASSES.add("java.lang.Integer");    ALLOWED_CLASSES.add("java.lang.Long");    ALLOWED_CLASSES.add("java.lang.Boolean");    ALLOWED_CLASSES.add("java.lang.Double");    ALLOWED_CLASSES.add("java.lang.Float");    ALLOWED_CLASSES.add("java.util.Date");    ALLOWED_CLASSES.add("java.util.ArrayList");    ALLOWED_CLASSES.add("java.util.HashMap");  }  public static Object fromString(String s) throws IOException, ClassNotFoundException {    byte[] data = Base64.getDecoder().decode(s);    ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(data)) {      @Override      protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {        if (!ALLOWED_CLASSES.contains(desc.getName())) {          throw new InvalidClassException("Unauthorized deserialization attempt", desc.getName());        }        return super.resolveClass(desc);      }    };    Object o = ois.readObject();    ois.close();    return o;  }  public static String toString(Serializable o) throws IOException {    ByteArrayOutputStream baos = new ByteArrayOutputStream();    ObjectOutputStream oos = new ObjectOutputStream(baos);    oos.writeObject(o);    oos.close();    return Base64.getEncoder().encodeToString(baos.toByteArray());  }  public static String show() throws IOException {    ByteArrayOutputStream baos = new ByteArrayOutputStream();    DataOutputStream dos = new DataOutputStream(baos);    dos.writeLong(-8699352886133051976L);    dos.close();    byte[] longBytes = baos.toByteArray();    return bytesToHex(longBytes);  }  public static String bytesToHex(byte[] bytes) {    char[] hexChars = new char[bytes.length * 2];    for (int j = 0; j < bytes.length; j++) {      int v = bytes[j] & 0xFF;      hexChars[j * 2] = hexArray[v >>> 4];      hexChars[j * 2 + 1] = hexArray[v & 0x0F];    }    return new String(hexChars);  }}